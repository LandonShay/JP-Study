@page "/"
@using Microsoft.AspNetCore.Components.Web
@namespace JP_Dictionary.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="JP Dictionary.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    <component type="typeof(App)" render-mode="ServerPrerendered" />

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href="" class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="https://kit.fontawesome.com/e78fc5731d.js" crossorigin="anonymous"></script>

    @* Chart JS *@
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
    <script src="_content/ChartJs.Blazor.Fork/ChartJsBlazorInterop.js"></script>

    @*For controlling focus*@
    <script>
        window.focusElementById = function (id) {
            const el = document.getElementById(id);
            if (el) {
                el.focus();
            }
        };
    </script>
    @*For mp3 text to speech*@
    <script>
        window.speakText = async function (base64Audio) {
            const audio = new Audio(`data:audio/mp3;base64,${base64Audio}`);
            await audio.play();

            audio.onended = function () {
                DotNet.invokeMethodAsync('JP Dictionary', 'SetTalkingFalse')
                    .catch(err => console.error("SetTalkingFalse failed", err));
            };
        };
    </script>
    @*For basic browser text to speech*@
    <script>
        window.speakTextBasic = function (text, speed) {
            if ('speechSynthesis' in window) {
                var utterance = new SpeechSynthesisUtterance(text);
                var voices = speechSynthesis.getVoices();

                var japaneseVoice = voices.find(voice => voice.lang === 'ja-JP');
                if (japaneseVoice) {
                    utterance.voice = japaneseVoice;
                }

                utterance.lang = 'ja-JP';
                utterance.pitch = 1;
                utterance.rate = speed;

                speechSynthesis.speak(utterance);

                utterance.onend = function () {
                    DotNet.invokeMethodAsync('JP Dictionary', 'SetTalkingFalse')
                        .catch(err => console.error("SetTalkingFalse failed", err));
                };
            } else {
                console.warn("Text-to-Speech is not supported in this browser.");
            }
        };
    </script>
    @* For opening links in new tabs *@
    <script>
        window.openInNewTab = function (url) {
            window.open(url, '_blank');
        };
    </script>
    @* For drag and drop table elements *@
    <script>
        window.enableDragDrop = function () {
            document.querySelectorAll("td[draggable='true']").forEach(row => {
                row.addEventListener("dragover", function (e) {
                    e.preventDefault();
                });
            });
        };
    </script>
</body>
</html>